<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://www.flint.com/flint-lang"
           xmlns:f="http://www.flint.com/flint-lang"
           elementFormDefault="qualified">

	<xs:element name="dot" type="xs:string" fixed="."/>
	<xs:element name="comma" type="xs:string" fixed=","/>
	<xs:element name="semicolon" type="xs:string" fixed=";"/>
	<xs:element name="colon" type="xs:string" fixed=":"/>
	<xs:element name="questionMark" type="xs:string" fixed="?"/>
	<xs:element name="leftParen" type="xs:string" fixed="("/>
	<xs:element name="rightParen" type="xs:string" fixed=")"/>
	<xs:element name="leftBrace" type="xs:string" fixed="{"/>
	<xs:element name="rightBrace" type="xs:string" fixed="}"/>
	<xs:element name="leftBracket" type="xs:string" fixed="["/>
	<xs:element name="rightBracket" type="xs:string" fixed="]"/>
	<xs:element name="at" type="xs:string" fixed="@"/>
	<xs:element name="ellipsis" type="xs:string" fixed="..."/>
	<xs:element name="lessThan" type="xs:string" fixed="&lt;"/>
	<xs:element name="greaterThan" type="xs:string" fixed=">"/>
	<xs:element name="equals" type="xs:string" fixed="="/>
	<xs:element name="star" type="xs:string" fixed="*"/>
	<xs:element name="rightArrow" type="xs:string" fixed="->"/>
	<xs:element name="pipe" type="xs:string" fixed="|"/>
	<xs:element name="doublePipe" type="xs:string" fixed="||"/>
	<xs:element name="doubleColon" type="xs:string" fixed="::"/>
	<xs:element name="percent" type="xs:string" fixed="%"/>
	<xs:element name="forwardSlash" type="xs:string" fixed="/"/>
	<xs:element name="lessThanLessThan" type="xs:string" fixed="&lt;&lt;"/>
	<xs:element name="plusPlus" type="xs:string" fixed="++"/>
	<xs:element name="plus" type="xs:string" fixed="+"/>
	<xs:element name="minus" type="xs:string" fixed="-"/>
	<xs:element name="minusMinus" type="xs:string" fixed="--"/>
	<xs:element name="diamond" type="xs:string" fixed="&lt;>"/>
	<xs:element name="exclamationMark" type="xs:string" fixed="!"/>
	<xs:element name="tilde" type="xs:string" fixed="~"/>

	<xs:element name="lessThanEquals" type="xs:string" fixed="&lt;="/>
	<xs:element name="greaterThanEquals" type="xs:string" fixed=">="/>
	<xs:element name="equalsEquals" type="xs:string" fixed="=="/>
	<xs:element name="exclamationMarkEquals" type="xs:string" fixed="!="/>

	<xs:element name="hat" type="xs:string" fixed="^"/>
	<xs:element name="ampersand" type="xs:string" fixed="&amp;"/>
	<xs:element name="doubleAmpersand" type="xs:string" fixed="&amp;&amp;"/>
	<xs:element name="squareBrackets" type="xs:string" fixed="[]"/>
	<xs:element name="diamondBrackets" type="xs:string" fixed="&lt;>"/>



	<xs:element name="identifier" type="f:identifier"/>
	<xs:simpleType name="identifier">
		<xs:restriction base="xs:string">
			<xs:maxLength value="256"/>
			<xs:pattern value="[a-zA-Z_][a-zA-Z0-9_]*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:element name="qualifiedIdentifier" type="f:qualifiedIdentifier"/>
	<xs:complexType name="qualifiedIdentifier">
		<xs:sequence>
			<xs:element ref="f:identifier"/>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="f:dot"/>
				<xs:element ref="f:identifier"/>
			</xs:sequence>
		</xs:sequence>
	</xs:complexType>

	<xs:element name="qualifiedIdentifierList" type="f:qualifiedIdentifierList"/>
	<xs:complexType name="qualifiedIdentifierList">
		<xs:sequence>
			<xs:element ref="f:qualifiedIdentifier"/>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="f:comma"/>
				<xs:element ref="f:qualifiedIdentifier"/>
			</xs:sequence>
		</xs:sequence>
	</xs:complexType>


	<xs:element name="assignmentOperator" type="f:assignmentOperator"/>
	<xs:complexType name="assignmentOperator">
		<xs:sequence>
			<xs:choice>
				<xs:element name="assign" type="xs:string" fixed="="/>
				<xs:element name="addAssign" type="xs:string" fixed="+="/>
				<xs:element name="subAssign" type="xs:string" fixed="-="/>
				<xs:element name="mulAssign" type="xs:string" fixed="*="/>
				<xs:element name="divAssign" type="xs:string" fixed="/="/>
				<xs:element name="modAssign" type="xs:string" fixed="%="/>
				<xs:element name="andAssign" type="xs:string" fixed="&amp;="/>
				<xs:element name="orAssign" type="xs:string" fixed="|="/>
				<xs:element name="xorAssign" type="xs:string" fixed="^="/>
				<xs:element name="leftShiftAssign" type="xs:string" fixed="&lt;&lt;="/>
				<xs:element name="rightShiftAssign" type="xs:string" fixed=">>="/>
				<xs:element name="unsignedRightShiftAssign" type="xs:string" fixed=">>>="/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>

	<xs:element name="infixOperator" type="f:infixOperator"/>
	<xs:complexType name="infixOperator">
		<xs:sequence>
			<xs:choice>
				<xs:element name="add" type="xs:string" fixed="+"/>
				<xs:element name="sub" type="xs:string" fixed="-"/>
				<xs:element name="mul" type="xs:string" fixed="*"/>
				<xs:element name="div" type="xs:string" fixed="/"/>
				<xs:element name="mod" type="xs:string" fixed="%"/>
				<xs:element name="and" type="xs:string" fixed="&amp;"/>
				<xs:element name="or" type="xs:string" fixed="|"/>
				<xs:element name="xor" type="xs:string" fixed="^"/>
				<xs:element name="leftShift" type="xs:string" fixed="&lt;&lt;"/>
				<xs:element name="rightShift" type="xs:string" fixed=">>"/>
				<xs:element name="unsignedRightShift" type="xs:string" fixed=">>>"/>
				<xs:element name="lessThan" type="xs:string" fixed="&lt;"/>
				<xs:element name="greaterThan" type="xs:string" fixed=">"/>
				<xs:element name="lessThanOrEqual" type="xs:string" fixed="&lt;="/>
				<xs:element name="greaterThanOrEqual" type="xs:string" fixed=">="/>
				<xs:element name="equal" type="xs:string" fixed="=="/>
				<xs:element name="notEqual" type="xs:string" fixed="!="/>
				<xs:element name="and" type="xs:string" fixed="&amp;&amp;"/>
				<xs:element name="or" type="xs:string" fixed="||"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>

	<xs:element name="prefixOperator" type="f:prefixOperator"/>
	<xs:complexType name="prefixOperator">
		<xs:sequence>
			<xs:choice>
				<xs:element name="inc" type="xs:string" fixed="++"/>
				<xs:element name="dec" type="xs:string" fixed="--"/>
				<xs:element name="not" type="xs:string" fixed="!"/>
				<xs:element name="neg" type="xs:string" fixed="-"/>
				<xs:element name="pos" type="xs:string" fixed="+"/>
				<xs:element name="complement" type="xs:string" fixed="~"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>

	<xs:element name="postfixOperator" type="f:postfixOperator"/> <!-- TODO: Add postfixOperator to expression3 -->
	<xs:complexType name="postfixOperator">
		<xs:sequence>
			<xs:choice>
				<xs:element name="inc" type="xs:string" fixed="++"/>
				<xs:element name="dec" type="xs:string" fixed="--"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>

	<xs:element name="literal" type="f:literal"/>
	<xs:complexType name="literal">
		<xs:choice>
			<xs:element name="integerLiteral" type="xs:string"/>
			<xs:element name="floatingPointLiteral" type="xs:string"/>
			<xs:element name="booleanLiteral" type="xs:string"/>
			<xs:element name="characterLiteral" type="xs:string"/>
			<xs:element name="stringLiteral" type="xs:string"/>
			<xs:element name="nullLiteral" type="xs:string"/>
		</xs:choice>
	</xs:complexType>


	<xs:complexType name="integerLiteral">
		<xs:sequence>
			<xs:element name="decimalIntegerLiteral" type="xs:string"/>
			<xs:element name="hexIntegerLiteral" type="xs:string"/>
			<xs:element name="octalIntegerLiteral" type="xs:string"/>
			<xs:element name="binaryIntegerLiteral" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>